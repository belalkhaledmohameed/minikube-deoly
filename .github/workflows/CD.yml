name: Example 07 - Deployment
run-name: Example 07 - Deployment

on: 
   push:
    branches:
      - production  #
  
    

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v5
      # - name: Configure kubectl
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.ACCESS_KEY }}
      #     aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1 
      - name: Setup SSH key
        run: |
          mkdir -p ~/Downloads
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/Downloads/Dploy-pipeline.pem
          chmod 400 ~/Downloads/Dploy-pipeline.pem
          ssh-keyscan -H 54.146.202.100 >> ~/.ssh/known_hosts
      
      
      - name: Deploy to Google Cloud # in this step i moved that folder i create on EC2 and i ssh on it and i will pull the update from remote branch to production branch and at exmple 2 ii push on master branch that it the development branch 
        run: |
          cd ~/Downloads
          ssh -i "Dploy-pipeline.pem" ubuntu@54.146.202.100 << 'EOF'
            sudo apt update -y
            sudo apt install -y ca-certificates curl gnupg

            sudo install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
              https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            sudo apt update -y
            sudo apt install -y docker-ce docker-ce-cli containerd.io
            sudo systemctl enable docker
            sudo systemctl start docker
            sudo docker ps

            curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl version --client
            curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
            sudo install minikube-linux-amd64 /usr/local/bin/minikube
            minikube version


          EOF
      - name: start minikube cluster 
        run:  |
          cd ~/Downloads
          ssh -i "Dploy-pipeline.pem" ubuntu@54.146.202.100
              minikube start --driver=docker
      - name: run deployment yaml
        run:  |
              kubectl apply -f k8s/manifests/deployment.yml
      - name: run service yaml
        run:  |

              kubectl apply -f k8s/manifests/service.yml
      - name: run ingress yaml
        run:  |
          
              kubectl apply -f k8s/manifests/ingress.yml
      - name: run ingress controller 
        run: |
          cd ~/Downloads
          ssh -i "Dploy-pipeline.pem" ubuntu@54.146.202.100
            minikube addons enable ingress
            minikube tunnel
            kubectl get svc

      
      
      

